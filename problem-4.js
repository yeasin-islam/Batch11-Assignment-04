// Problem-04: Detect The Perfect Best Friend 

// ‚ö†Ô∏è Function Name Must be isBestFriend()
// üì¢ ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶§‡ßç‡¶¨ ‡¶ï‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Æ‡ßÅ‡¶ñ‡ßá‡¶∞ ‡¶ï‡¶•‡¶æ? ‡¶®‡¶æ‡¶ï‡¶ø ‡¶∏‡¶§‡ßç‡¶Ø‡¶ø‡¶ï‡¶æ‡¶∞‡ßá‡¶∞? üßê ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶æ isBestFriend()  ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶≤‡¶ø‡¶ñ‡¶§‡ßá ‡¶π‡¶¨‡ßá, ‡¶Ø‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá ‡¶¶‡ßÅ‡¶á ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶§‡ßç‡¶¨ ‡¶Ü‡¶∏‡¶≤‡ßá‡¶á ‡¶∏‡¶æ‡¶ö‡ßç‡¶ö‡¶æ ‡¶ï‡¶ø‡¶®‡¶æ! üîç
// ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ï‡ßá ‡ß® ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ‡¶∞ ‡¶°‡ßá‡¶ü‡¶æ ‡¶¶‡ßá‡ßü‡¶æ ‡¶π‡¶¨‡ßá‡•§ ‡¶Ø‡¶¶‡¶ø ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡¶ú‡¶®‡ßá‡¶∞ bestFriend ‡¶è‡¶∞ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ  ‡ß®‡ßü ‡¶ú‡¶®‡ßá‡¶∞ roll ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Æ‡¶ø‡¶≤‡ßá ‡¶Ø‡¶æ‡ßü ‡¶è‡¶¨‡¶Ç ‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡ßü ‡¶ú‡¶®‡ßá‡¶∞ bestFriend ‡¶è‡¶∞ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶ú‡¶®‡ßá‡¶∞ roll ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Æ‡¶ø‡¶≤‡ßá ‡¶Ø‡¶æ‡ßü  ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶á ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶¨‡ßÅ‡¶ù‡¶¨ ‡¶Ø‡ßá ‡¶§‡¶æ‡¶∞‡¶æ ‡¶¶‡ßÅ‡¶á‡¶ú‡¶® ‡¶∏‡¶§‡ßç‡¶Ø‡¶ø‡¶ï‡¶æ‡¶∞‡ßá‡¶∞ ‡¶¨‡ßá‡¶∏‡ßç‡¶ü ‡¶´‡ßç‡¶∞‡ßá‡¶®‡ßç‡¶°‡•§ 

// üì• Input:
// ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ü‡¶ø 2 ‡¶ü‡¶æ Input ‡¶®‡ßá‡¶¨‡ßá‡•§ 
// ‡ßß‡¶Æ input ‡¶ü‡¶ø ‡¶π‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶æ object  , 
// ‡ß®‡ßü input ‡¶ü‡¶ø‡¶ì  ‡¶π‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶æ object
// ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶ü‡¶æ object ‡¶è ‡ß© ‡¶ü‡¶æ  property ‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á  ‡¶•‡¶æ‡¶ï‡¶¨‡ßá 
// ( name: string , roll: number , bestFriend: number ) 




// üöÄ Output:
// ‡¶Ø‡¶¶‡¶ø ‡¶§‡¶æ‡¶∞‡¶æ ‡ß® ‡¶ú‡¶® ‡ß® ‡¶ú‡¶®‡ßá‡¶∞ ‡¶¨‡ßá‡¶∏‡ßç‡¶ü ‡¶´‡ßá‡¶®‡ßç‡¶° ‡¶π‡ßü‡ßá ‡¶•‡¶æ‡¶ï‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá return ‡¶ï‡¶∞‡¶¨‡ßá boolean value  true
// ‡¶Ü‡¶∞ ‡¶Ø‡¶¶‡¶ø ‡¶§‡¶æ‡¶∞‡¶æ ‡¶¨‡ßá‡¶∏‡ßç‡¶ü ‡¶´‡ßç‡¶∞‡ßá‡¶®‡ßç‡¶° ‡¶®‡¶æ ‡¶π‡ßü‡ßá ‡¶•‡¶æ‡¶ï‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá return ‡¶ï‡¶∞‡¶¨‡ßá false

// Note: ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á output ‡¶ü‡¶æ ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§  console.log ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ï‡ßã‡¶® ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï ‡¶™‡¶æ‡¶¨‡ßá‡¶®‡¶æ


// üö©Challenge:  
// Input ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶Ø‡¶¶‡¶ø object ‡¶®‡¶æ ‡¶π‡ßü  ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®    "Invalid" return ‡¶ï‡¶∞‡¶¨‡ßá‡•§  



// SAMPLE INPUT
// -SAMPLE OUTPUT

// { name: "hashem", roll: 1, bestFriend: 2 },
// { name: "kashem", roll: 2, bestFriend: 1 }
// -true

// { name: "hashem", roll: 21, bestFriend: 1},
// { name: "kashem", roll: 1, bestFriend: 2 }
// -false

// { name:"kashem", roll: 2, bestFriend: 11},
// "Kashem er Kono Bondhu Nai"
// -"Invalid"

// "hashem", { name:"kashem", roll: 2, bestFriend: 11}
// -"Invalid"

// { name: "hashem", roll: 1 , bestFriend: 1},
// { name: "kashem" , roll: 1, bestFriend: 1 }
// -true


// /*function signature/sample */
// function  isBestFriend( f1 , f2 ) {
//           // You have to write your code here
// }



// solution
function  isBestFriend( f1 , f2 ) {
    if (typeof f1 !== "object" || typeof f2 !== "object" ||
        f1 === null || f2 === null) {
        return "Invalid";
    }
    if (!f1.name || !f2.name || !f1.roll || !f2.roll || !f1.bestFriend || !f2.bestFriend) {
        return "Invalid";
    }
    if (f1.bestFriend === f2.roll && f2.bestFriend === f1.roll) {
        return true;
    } else {
        return false;
    }
}


// Example test cases
console.log(isBestFriend(
    { name: "hashem", roll: 1, bestFriend: 2 },
    { name: "kashem", roll: 2, bestFriend: 1 }
));

console.log(isBestFriend(
    { name: "hashem", roll: 21, bestFriend: 1 },
    { name: "kashem", roll: 1, bestFriend: 2 }
));

console.log(isBestFriend(
    { name: "kashem", roll: 2, bestFriend: 11 },
    "Kashem er Kono Bondhu Nai"
));

console.log(isBestFriend("hashem", { name: "kashem", roll: 2, bestFriend: 11 }));

console.log(isBestFriend(
    { name: "hashem", roll: 1, bestFriend: 1 },
    { name: "kashem", roll: 1, bestFriend: 1 }
));